За последние несколько лет мы видели целый ряд идей относительно архитектуры систем Каждая из них на выходе давала:

Независимость от фреймворка Архитектура не зависит от существования какой-либо библиотеки Это позволяет использовать фреймворк в качестве инструмента, вместо того, чтобы втискивать свою систему в рамки его ограничений
Тестируемость Бизнес-правила могут быть протестированы без пользовательского интерфейса, базы данных, веб-сервера или любого другого внешнего компонента
Независимоcть от UI Пользовательский интерфейс можно легко изменить, не изменяя остальную систему Например, веб-интерфейс может быть заменен на консольный, без изменения бизнес-правил
Независимоcть от базы данных Вы можете поменять Oracle или SQL Server на MongoDB, BigTable, CouchDB или что-то еще Ваши бизнес-правила не связаны с базой данных
Независимость от какого-либо внешнего сервиса По факту ваши бизнес правила просто ничего не знают о внешнем мире

Диаграмма в начале этой статьи — попытка объединить все эти идеи в единую эффективную схему